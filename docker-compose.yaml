version: '3.8'

services:
  spark-master:
    container_name: spark-master
    build:
      context: ./src/services/spark
      dockerfile: Dockerfile
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "9090:8080"
      - "7077:7077"
    networks:
      - intranet

  spark-worker-1:
    container_name: spark-worker-1
    build:
      context: ./src/services/spark
      dockerfile: Dockerfile
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: ${SPARK_WORKER_CORES}
      SPARK_WORKER_MEMORY: ${SPARK_WORKER_MEMORY}
      SPARK_MASTER_URL: spark://spark-master:7077
    networks:
      - intranet

  db:
    container_name: db
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./docker-volumes/db-data:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    networks:
      - intranet

  jupyter:
    container_name: jupyter
    build:
      context: ./src/services/jupyter
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    volumes:
      - ./src/notebooks:/home/jovyan/work
      - ./csv-data:/home/jovyan/data
    environment:
      JUPYTER_ENABLE_LAB: "yes"
    networks:
      - intranet

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_ACCESS_KEY}
    volumes:
      - ./docker-volumes/minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - intranet

networks:
  intranet:
    driver: bridge
